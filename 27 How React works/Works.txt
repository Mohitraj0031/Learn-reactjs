Root Component:
-> The App is the main or root component of a React application.
-> It's the starting point of your React component tree.

Virtual DOM:
-> React creats an in-memory structure called the virtual DOM.
-> Different from the actual browser DOM.
-> It's a lightweight representation where each node stands for a component and its attributs.

Reconciliation Process:
-> When component data changes, React updates the virtual DOM's state to mirror these changes.
-> React then compares the current and previous versions of the virtual DOM.
-> It idetifies the specific nodes that need updating.
-> Only these nodes are updated in the real browser DOM, making it efficient.

React and ReactDOM:
-> The actual updating of the browser's DOM isn't done by React itself.
-> It's handled by a companion library called react dom.

Root Element:
-> The root div acts as a container for the React app.
-> The script tag is where the React app starts executing.
-> If you check main.tsx, the component tree is rendered inside this root element.

Strict Mode Component:
-> It's a special component in React.
-> Doesn't have a visual representation.
-> Its purpose is to spot potential issues in your React app.

Platform Independence:
-> React's design allows it to be platform agnostic.
-> While react-dom helps build web UL's using React , ReactNative can be 
be used to craft mobile app UIs 
